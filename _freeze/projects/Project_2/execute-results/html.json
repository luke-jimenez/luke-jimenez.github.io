{
  "hash": "5a9ca70a68b903f528de04a315731bbc",
  "result": {
    "markdown": "---\ntitle: \"Project 2\"\nauthor: \"Luke Jimenez\"\ndate: \"2023-11-28\"\noutput: html_document\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Set\n\nhousedata <- read.csv(\"https://lasanthi-asu.github.io/STT3851ClassRepo/Rmarkdown/Data/housedata.csv\", \n                      colClasses = c(id = \"character\", date = \"character\", \n                                     yr_built = \"character\", zipcode = \"factor\", grade = \"factor\"))\n\nhousedata$date <- as.Date(housedata$date, \"%Y%m%d\")\nhousedata$waterfront <- factor(housedata$waterfront, labels = c(\"No\", \"Yes\"))\nhousedata$condition <- factor(housedata$condition, labels = c(\"poor\", \"fair\", \"average\", \"good\", \"very good\"))\nhousedata$yr_renovated <- ifelse(housedata$yr_renovated == 0, housedata$yr_built, housedata$yr_renovated)\nhousedata$yr_built <- as.Date(ISOdate(housedata$yr_built, 9, 1))  # Complete Year, Sept 1\nhousedata$yr_renovated <- as.Date(ISOdate(housedata$yr_renovated, 9, 1))  # Last renovated Year, Sept 1\n\nhousedata <- housedata[, -1]\n\n\n# Test Data Set (only use this to send predictions)\n\n#### Perform same steps with test set\n\nhousedataT <- read.csv(\"https://lasanthi-asu.github.io/STT3851ClassRepo/Rmarkdown/Data/housedataTEST.csv\", \n                      colClasses = c(id = \"character\", date = \"character\", \n                                     yr_built = \"character\", zipcode = \"factor\", grade = \"factor\"))\n\nhousedataT$date <- as.Date(housedataT$date, \"%Y%m%d\")\nhousedataT$waterfront <- factor(housedataT$waterfront, labels = c(\"No\", \"Yes\"))\nhousedataT$condition <- factor(housedataT$condition, labels = c(\"poor\", \"fair\", \"average\", \"good\", \"very good\"))\nhousedataT$yr_renovated <- ifelse(housedataT$yr_renovated == 0, housedataT$yr_built, housedataT$yr_renovated)\nhousedataT$yr_built <- as.Date(ISOdate(housedataT$yr_built, 9, 1))  # Complete Year, Sept 1\nhousedataT$yr_renovated <- as.Date(ISOdate(housedataT$yr_renovated, 9, 1))  # Last renovated Year, Sept 1\nhousedataT <- housedataT[, -1]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaps)\nlibrary(ggplot2)\n\nhousedata_simp <- housedata[,c(-1,-14,-15)]\nhousedata_simp <- housedata_simp[-13] #removed dates from data\n\nfit <- regsubsets(price~., data = housedata_simp, nvmax = 60, method = \"forward\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in leaps.setup(x, y, wt = wt, nbest = nbest, nvmax = nvmax, force.in =\nforce.in, : 1 linear dependencies found\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nReordering variables and trying again:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in rval$lopt[] <- rval$vorder[rval$lopt]: number of items to replace is\nnot a multiple of replacement length\n```\n:::\n\n```{.r .cell-code}\nfit_summary <- summary(fit)\nfit_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSubset selection object\nCall: regsubsets.formula(price ~ ., data = housedata_simp, nvmax = 60, \n    method = \"forward\")\n28 Variables  (and intercept)\n                   Forced in Forced out\nbedrooms               FALSE      FALSE\nbathrooms              FALSE      FALSE\nsqft_living            FALSE      FALSE\nsqft_lot               FALSE      FALSE\nfloors                 FALSE      FALSE\nwaterfrontYes          FALSE      FALSE\nview                   FALSE      FALSE\nconditionfair          FALSE      FALSE\nconditionaverage       FALSE      FALSE\nconditiongood          FALSE      FALSE\nconditionvery good     FALSE      FALSE\ngrade10                FALSE      FALSE\ngrade11                FALSE      FALSE\ngrade12                FALSE      FALSE\ngrade13                FALSE      FALSE\ngrade3                 FALSE      FALSE\ngrade4                 FALSE      FALSE\ngrade5                 FALSE      FALSE\ngrade6                 FALSE      FALSE\ngrade7                 FALSE      FALSE\ngrade8                 FALSE      FALSE\ngrade9                 FALSE      FALSE\nsqft_above             FALSE      FALSE\nlat                    FALSE      FALSE\nlong                   FALSE      FALSE\nsqft_living15          FALSE      FALSE\nsqft_lot15             FALSE      FALSE\nsqft_basement          FALSE      FALSE\n1 subsets of each size up to 27\nSelection Algorithm: forward\n          bedrooms bathrooms sqft_living sqft_lot floors waterfrontYes view\n1  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \" \"           \" \" \n2  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \" \"           \" \" \n3  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \" \"           \"*\" \n4  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n5  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n6  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n7  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n8  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n9  ( 1 )  \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n10  ( 1 ) \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n11  ( 1 ) \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n12  ( 1 ) \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n13  ( 1 ) \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n14  ( 1 ) \" \"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n15  ( 1 ) \"*\"      \" \"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n16  ( 1 ) \"*\"      \"*\"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n17  ( 1 ) \"*\"      \"*\"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n18  ( 1 ) \"*\"      \"*\"       \"*\"         \" \"      \" \"    \"*\"           \"*\" \n19  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \" \"    \"*\"           \"*\" \n20  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \" \"    \"*\"           \"*\" \n21  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \" \"    \"*\"           \"*\" \n22  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \" \"    \"*\"           \"*\" \n23  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \"*\"    \"*\"           \"*\" \n24  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \"*\"    \"*\"           \"*\" \n25  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \"*\"    \"*\"           \"*\" \n26  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \"*\"    \"*\"           \"*\" \n27  ( 1 ) \"*\"      \"*\"       \"*\"         \"*\"      \"*\"    \"*\"           \"*\" \n          conditionfair conditionaverage conditiongood conditionvery good\n1  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n2  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n3  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n4  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n5  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n6  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n7  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n8  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n9  ( 1 )  \" \"           \" \"              \" \"           \" \"               \n10  ( 1 ) \" \"           \"*\"              \" \"           \" \"               \n11  ( 1 ) \" \"           \"*\"              \" \"           \" \"               \n12  ( 1 ) \" \"           \"*\"              \" \"           \" \"               \n13  ( 1 ) \" \"           \"*\"              \" \"           \"*\"               \n14  ( 1 ) \" \"           \"*\"              \" \"           \"*\"               \n15  ( 1 ) \" \"           \"*\"              \" \"           \"*\"               \n16  ( 1 ) \" \"           \"*\"              \" \"           \"*\"               \n17  ( 1 ) \" \"           \"*\"              \" \"           \"*\"               \n18  ( 1 ) \" \"           \"*\"              \"*\"           \"*\"               \n19  ( 1 ) \" \"           \"*\"              \"*\"           \"*\"               \n20  ( 1 ) \" \"           \"*\"              \"*\"           \"*\"               \n21  ( 1 ) \" \"           \"*\"              \"*\"           \"*\"               \n22  ( 1 ) \"*\"           \"*\"              \"*\"           \"*\"               \n23  ( 1 ) \"*\"           \"*\"              \"*\"           \"*\"               \n24  ( 1 ) \"*\"           \"*\"              \"*\"           \"*\"               \n25  ( 1 ) \"*\"           \"*\"              \"*\"           \"*\"               \n26  ( 1 ) \"*\"           \"*\"              \"*\"           \"*\"               \n27  ( 1 ) \"*\"           \"*\"              \"*\"           \"*\"               \n          grade10 grade11 grade12 grade13 grade3 grade4 grade5 grade6 grade7\n1  ( 1 )  \" \"     \" \"     \" \"     \" \"     \" \"    \" \"    \" \"    \" \"    \" \"   \n2  ( 1 )  \" \"     \" \"     \" \"     \" \"     \" \"    \" \"    \" \"    \" \"    \" \"   \n3  ( 1 )  \" \"     \" \"     \" \"     \" \"     \" \"    \" \"    \" \"    \" \"    \" \"   \n4  ( 1 )  \" \"     \" \"     \" \"     \" \"     \" \"    \" \"    \" \"    \" \"    \" \"   \n5  ( 1 )  \" \"     \" \"     \"*\"     \" \"     \" \"    \" \"    \" \"    \" \"    \" \"   \n6  ( 1 )  \" \"     \"*\"     \"*\"     \" \"     \" \"    \" \"    \" \"    \" \"    \" \"   \n7  ( 1 )  \" \"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n8  ( 1 )  \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n9  ( 1 )  \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n10  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n11  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n12  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n13  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n14  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n15  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n16  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n17  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n18  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n19  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \" \"   \n20  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \" \"    \" \"    \" \"    \" \"    \"*\"   \n21  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \" \"    \" \"    \" \"    \"*\"   \n22  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \" \"    \" \"    \" \"    \"*\"   \n23  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \" \"    \" \"    \" \"    \"*\"   \n24  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \"*\"    \" \"    \" \"    \"*\"   \n25  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \"*\"    \" \"    \" \"    \"*\"   \n26  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \"*\"    \" \"    \"*\"    \"*\"   \n27  ( 1 ) \"*\"     \"*\"     \"*\"     \"*\"     \"*\"    \"*\"    \"*\"    \"*\"    \"*\"   \n          grade8 grade9 sqft_above sqft_basement lat long sqft_living15\n1  ( 1 )  \" \"    \" \"    \" \"        \" \"           \" \" \" \"  \" \"          \n2  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n3  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n4  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n5  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n6  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n7  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n8  ( 1 )  \" \"    \" \"    \" \"        \" \"           \"*\" \" \"  \" \"          \n9  ( 1 )  \" \"    \"*\"    \" \"        \" \"           \"*\" \" \"  \" \"          \n10  ( 1 ) \" \"    \"*\"    \" \"        \" \"           \"*\" \" \"  \" \"          \n11  ( 1 ) \" \"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \" \"          \n12  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \" \"          \n13  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \" \"          \n14  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n15  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n16  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n17  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n18  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n19  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n20  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n21  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n22  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n23  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n24  ( 1 ) \"*\"    \"*\"    \" \"        \" \"           \"*\" \"*\"  \"*\"          \n25  ( 1 ) \"*\"    \"*\"    \" \"        \"*\"           \"*\" \"*\"  \"*\"          \n26  ( 1 ) \"*\"    \"*\"    \" \"        \"*\"           \"*\" \"*\"  \"*\"          \n27  ( 1 ) \"*\"    \"*\"    \" \"        \"*\"           \"*\" \"*\"  \"*\"          \n          sqft_lot15\n1  ( 1 )  \" \"       \n2  ( 1 )  \" \"       \n3  ( 1 )  \" \"       \n4  ( 1 )  \" \"       \n5  ( 1 )  \" \"       \n6  ( 1 )  \" \"       \n7  ( 1 )  \" \"       \n8  ( 1 )  \" \"       \n9  ( 1 )  \" \"       \n10  ( 1 ) \" \"       \n11  ( 1 ) \" \"       \n12  ( 1 ) \" \"       \n13  ( 1 ) \" \"       \n14  ( 1 ) \" \"       \n15  ( 1 ) \" \"       \n16  ( 1 ) \" \"       \n17  ( 1 ) \"*\"       \n18  ( 1 ) \"*\"       \n19  ( 1 ) \"*\"       \n20  ( 1 ) \"*\"       \n21  ( 1 ) \"*\"       \n22  ( 1 ) \"*\"       \n23  ( 1 ) \"*\"       \n24  ( 1 ) \"*\"       \n25  ( 1 ) \"*\"       \n26  ( 1 ) \"*\"       \n27  ( 1 ) \"*\"       \n```\n:::\n\n```{.r .cell-code}\nwhich.max(fit_summary$adjr2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 22\n```\n:::\n\n```{.r .cell-code}\nwhich.min(fit_summary$cp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 22\n```\n:::\n\n```{.r .cell-code}\nwhich.min(fit_summary$bic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 19\n```\n:::\n\n```{.r .cell-code}\nnum_predictors <- c(seq(1:27))\nBIC_vals <- fit_summary$bic\nadjr2_vals <- fit_summary$adjr2\ncp_vals <- fit_summary$cp\n#BIC Graph\ndataframe3 <- data.frame(BIC_vals = c(BIC_vals), num_predictors = c(num_predictors))\n\nggplot(data = dataframe3, aes(x= num_predictors, y = BIC_vals))+geom_point(color = \"Red\")+geom_smooth() +theme_bw() + scale_x_continuous(breaks = c(1:10), name = \"Number of variables\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndataframe4 <- data.frame(cp_vals = c(cp_vals), num_predictors = c(num_predictors))\n\nggplot(data = dataframe4, aes(x= num_predictors, y = cp_vals))+geom_point(color = \"Red\")+geom_smooth() +theme_bw() + scale_x_continuous(breaks = c(1:10), name = \"Number of variables\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\ndataframe5 <- data.frame(adjr2_vals = c(adjr2_vals), num_predictors = c(num_predictors))\n\nggplot(data = dataframe5, aes(x= num_predictors, y = adjr2_vals))+geom_point(color = \"Red\")+geom_smooth() +theme_bw() + scale_x_continuous(breaks = c(1:10), name = \"Number of variables\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncoef(fit,15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       (Intercept)           bedrooms        sqft_living      waterfrontYes \n     -3.836480e+07      -1.947018e+04       1.615389e+02       5.861344e+05 \n              view   conditionaverage conditionvery good            grade10 \n      4.563069e+04      -4.526035e+04       7.552157e+04       3.564890e+05 \n           grade11            grade12            grade13             grade8 \n      6.142487e+05       1.104470e+06       2.041125e+06       6.182168e+04 \n            grade9               long      sqft_living15         sqft_lot15 \n      1.811792e+05      -3.150586e+05       3.459466e+01      -4.667810e-01 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Analyze correlation and linear relationships\n\n\nmodel1 <- lm(price~bedrooms + sqft_living + waterfront + grade + sqft_living15 + sqft_lot15 + condition + zipcode +long, data = housedata)\n\nmodel2 <- lm(log(price)~ + sqft_living + waterfront + grade + sqft_living15 + log(sqft_lot15) + condition + zipcode + long + view , data = housedata)\n\nmodel3 <- lm(log(price)~. + log(sqft_living) + waterfront + grade + log(sqft_living15) + log(sqft_lot15) + condition + zipcode + long + view , data = housedata)\n\nmodel4 <- lm(log(price)~  log(sqft_living) + waterfront + grade + log(sqft_living15) + log(sqft_lot15) + condition + zipcode + long + view + bedrooms + bathrooms + lat + date , data = housedata)\n\nJimenezLuke1 <- predict(model1, housedataT)\nJimenezLuke2 <- predict(model4, housedataT)\n\nsummary(model4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = log(price) ~ log(sqft_living) + waterfront + grade + \n    log(sqft_living15) + log(sqft_lot15) + condition + zipcode + \n    long + view + bedrooms + bathrooms + lat + date, data = housedata)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.24206 -0.09772  0.00478  0.10184  1.02069 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)        -7.437e+01  7.708e+00  -9.648  < 2e-16 ***\nlog(sqft_living)    4.056e-01  7.382e-03  54.948  < 2e-16 ***\nwaterfrontYes       5.002e-01  1.749e-02  28.594  < 2e-16 ***\ngrade10             3.378e-01  1.858e-01   1.818 0.069124 .  \ngrade11             4.557e-01  1.861e-01   2.449 0.014330 *  \ngrade12             6.031e-01  1.870e-01   3.225 0.001263 ** \ngrade13             8.935e-01  1.933e-01   4.623 3.81e-06 ***\ngrade3             -4.011e-03  2.128e-01  -0.019 0.984964    \ngrade4             -1.609e-01  1.903e-01  -0.846 0.397692    \ngrade5             -9.296e-02  1.855e-01  -0.501 0.616296    \ngrade6             -3.854e-02  1.854e-01  -0.208 0.835335    \ngrade7              2.182e-02  1.855e-01   0.118 0.906347    \ngrade8              1.017e-01  1.856e-01   0.548 0.583779    \ngrade9              2.323e-01  1.857e-01   1.251 0.210876    \nlog(sqft_living15)  1.600e-01  7.411e-03  21.592  < 2e-16 ***\nlog(sqft_lot15)     5.518e-02  2.410e-03  22.892  < 2e-16 ***\nconditionfair       1.186e-01  4.092e-02   2.899 0.003743 ** \nconditionaverage    2.313e-01  3.802e-02   6.083 1.20e-09 ***\nconditiongood       2.707e-01  3.805e-02   7.116 1.15e-12 ***\nconditionvery good  3.398e-01  3.827e-02   8.880  < 2e-16 ***\nzipcode98002        3.402e-02  1.820e-02   1.869 0.061587 .  \nzipcode98003        3.452e-03  1.607e-02   0.215 0.829884    \nzipcode98004        1.011e+00  2.940e-02  34.391  < 2e-16 ***\nzipcode98005        6.189e-01  3.145e-02  19.680  < 2e-16 ***\nzipcode98006        5.678e-01  2.562e-02  22.158  < 2e-16 ***\nzipcode98007        5.658e-01  3.224e-02  17.553  < 2e-16 ***\nzipcode98008        5.897e-01  3.079e-02  19.155  < 2e-16 ***\nzipcode98010        3.441e-01  2.731e-02  12.599  < 2e-16 ***\nzipcode98011        2.691e-01  4.022e-02   6.690 2.29e-11 ***\nzipcode98014        3.018e-01  4.439e-02   6.798 1.10e-11 ***\nzipcode98019        2.625e-01  4.327e-02   6.066 1.34e-09 ***\nzipcode98022        2.281e-01  2.408e-02   9.474  < 2e-16 ***\nzipcode98023       -6.980e-02  1.485e-02  -4.701 2.61e-06 ***\nzipcode98024        4.796e-01  3.808e-02  12.595  < 2e-16 ***\nzipcode98027        5.096e-01  2.640e-02  19.301  < 2e-16 ***\nzipcode98028        2.099e-01  3.900e-02   5.383 7.42e-08 ***\nzipcode98029        6.221e-01  3.017e-02  20.622  < 2e-16 ***\nzipcode98030        6.921e-02  1.757e-02   3.939 8.22e-05 ***\nzipcode98031        7.559e-02  1.844e-02   4.100 4.15e-05 ***\nzipcode98032       -5.362e-02  2.146e-02  -2.499 0.012476 *  \nzipcode98033        6.462e-01  3.341e-02  19.341  < 2e-16 ***\nzipcode98034        3.788e-01  3.582e-02  10.574  < 2e-16 ***\nzipcode98038        2.545e-01  1.990e-02  12.787  < 2e-16 ***\nzipcode98039        1.152e+00  3.885e-02  29.640  < 2e-16 ***\nzipcode98040        7.750e-01  2.627e-02  29.506  < 2e-16 ***\nzipcode98042        1.137e-01  1.702e-02   6.678 2.49e-11 ***\nzipcode98045        4.859e-01  3.677e-02  13.214  < 2e-16 ***\nzipcode98052        5.297e-01  3.405e-02  15.556  < 2e-16 ***\nzipcode98053        5.321e-01  3.638e-02  14.628  < 2e-16 ***\nzipcode98055        1.129e-01  2.059e-02   5.482 4.27e-08 ***\nzipcode98056        2.729e-01  2.240e-02  12.181  < 2e-16 ***\nzipcode98058        1.631e-01  1.943e-02   8.395  < 2e-16 ***\nzipcode98059        3.154e-01  2.202e-02  14.322  < 2e-16 ***\nzipcode98065        4.952e-01  3.386e-02  14.625  < 2e-16 ***\nzipcode98070        1.701e-01  2.607e-02   6.523 7.07e-11 ***\nzipcode98072        3.207e-01  3.977e-02   8.063 7.95e-16 ***\nzipcode98074        5.031e-01  3.218e-02  15.631  < 2e-16 ***\nzipcode98075        5.328e-01  3.087e-02  17.258  < 2e-16 ***\nzipcode98077        3.147e-01  4.153e-02   7.577 3.72e-14 ***\nzipcode98092        7.518e-02  1.589e-02   4.733 2.23e-06 ***\nzipcode98102        8.278e-01  3.491e-02  23.711  < 2e-16 ***\nzipcode98103        6.516e-01  3.228e-02  20.187  < 2e-16 ***\nzipcode98105        8.026e-01  3.303e-02  24.302  < 2e-16 ***\nzipcode98106        2.270e-01  2.402e-02   9.451  < 2e-16 ***\nzipcode98107        6.650e-01  3.316e-02  20.055  < 2e-16 ***\nzipcode98108        2.557e-01  2.674e-02   9.562  < 2e-16 ***\nzipcode98109        8.378e-01  3.409e-02  24.573  < 2e-16 ***\nzipcode98112        9.039e-01  3.023e-02  29.896  < 2e-16 ***\nzipcode98115        6.481e-01  3.276e-02  19.786  < 2e-16 ***\nzipcode98116        6.036e-01  2.664e-02  22.657  < 2e-16 ***\nzipcode98117        6.213e-01  3.322e-02  18.702  < 2e-16 ***\nzipcode98118        3.762e-01  2.327e-02  16.168  < 2e-16 ***\nzipcode98119        8.134e-01  3.215e-02  25.302  < 2e-16 ***\nzipcode98122        6.895e-01  2.882e-02  23.924  < 2e-16 ***\nzipcode98125        3.787e-01  3.552e-02  10.663  < 2e-16 ***\nzipcode98126        4.425e-01  2.472e-02  17.900  < 2e-16 ***\nzipcode98133        2.448e-01  3.663e-02   6.682 2.42e-11 ***\nzipcode98136        5.483e-01  2.507e-02  21.872  < 2e-16 ***\nzipcode98144        5.664e-01  2.678e-02  21.147  < 2e-16 ***\nzipcode98146        1.611e-01  2.246e-02   7.171 7.76e-13 ***\nzipcode98148        1.101e-01  3.155e-02   3.489 0.000485 ***\nzipcode98155        2.144e-01  3.822e-02   5.611 2.05e-08 ***\nzipcode98166        1.975e-01  2.066e-02   9.556  < 2e-16 ***\nzipcode98168       -2.250e-02  2.185e-02  -1.030 0.303007    \nzipcode98177        3.527e-01  3.820e-02   9.232  < 2e-16 ***\nzipcode98178        7.751e-02  2.226e-02   3.482 0.000498 ***\nzipcode98188        2.782e-02  2.272e-02   1.224 0.220854    \nzipcode98198        8.491e-03  1.734e-02   0.490 0.624470    \nzipcode98199        6.448e-01  3.152e-02  20.454  < 2e-16 ***\nlong               -4.556e-01  5.686e-02  -8.013 1.19e-15 ***\nview                5.596e-02  2.147e-03  26.060  < 2e-16 ***\nbedrooms           -1.212e-02  2.069e-03  -5.857 4.79e-09 ***\nbathrooms           2.848e-02  3.006e-03   9.473  < 2e-16 ***\nlat                 4.807e-01  7.940e-02   6.055 1.44e-09 ***\ndate                2.038e-04  1.216e-05  16.756  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.18 on 17289 degrees of freedom\nMultiple R-squared:  0.8839,\tAdjusted R-squared:  0.8833 \nF-statistic:  1400 on 94 and 17289 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nfinal_predictions <- 2.71828182845904523536028747135266249**JimenezLuke2\n\ntest_predictions <- exp(JimenezLuke2)\n\nwrite.csv(test_predictions, file = \"Jimenez_Luke.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#log(price) improves linear relationship of the first two variables below\n\ncormodel1 <- lm(log(price) ~ bedrooms, data = housedata)\np1<- ggplot(cormodel1, aes(x = .fitted, y = .resid)) + geom_point(color = \"red\") + theme_bw()\np1\n```\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncor(log(housedata$price), housedata$bedrooms)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3476882\n```\n:::\n\n```{.r .cell-code}\ncormodel2 <- lm(log(price) ~ sqft_living15, data = housedata)\np2<- ggplot(cormodel2, aes(x = .fitted, y = .resid)) + geom_point(color = \"green\") + theme_bw()\np2\n```\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncor(log(housedata$price), housedata$sqft_living15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6187591\n```\n:::\n\n```{.r .cell-code}\ncormodel3 <- lm(price ~ sqft_living , data = housedata)\np3<- ggplot(cormodel3, aes(x = .fitted, y = .resid)) + geom_point(color = \"blue\") + theme_bw()\np3\n```\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncor(housedata$price, housedata$sqft_living)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7029164\n```\n:::\n\n```{.r .cell-code}\ncormodel4 <- lm(price ~ log(sqft_lot15) , data = housedata)\np4<- ggplot(cormodel4, aes(x = .fitted, y = .resid)) + geom_point(color = \"pink\") + theme_bw()\np4\n```\n\n::: {.cell-output-display}\n![](Project_2_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n\n```{.r .cell-code}\ncor(housedata$price, log(housedata$sqft_lot15))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1481885\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- model.matrix (price~sqft_living + waterfront + grade + sqft_living15 + sqft_lot15 + condition + zipcode + long + view + bedrooms + bathrooms + lat + date,housedata )[,-1] # remove intercept\ny <- housedata$price\n\nlibrary (glmnet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Matrix\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoaded glmnet 4.1-8\n```\n:::\n\n```{.r .cell-code}\ngrid <- 10^seq(10, -2, length = 100)\nlasso_model <- glmnet(x, y, alpha = 1, lambda = grid)\nlasso_model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:  glmnet(x = x, y = y, alpha = 1, lambda = grid) \n\n    Df  %Dev    Lambda\n1    0  0.00 1.000e+10\n2    0  0.00 7.565e+09\n3    0  0.00 5.722e+09\n4    0  0.00 4.329e+09\n5    0  0.00 3.275e+09\n6    0  0.00 2.477e+09\n7    0  0.00 1.874e+09\n8    0  0.00 1.417e+09\n9    0  0.00 1.072e+09\n10   0  0.00 8.111e+08\n11   0  0.00 6.136e+08\n12   0  0.00 4.642e+08\n13   0  0.00 3.511e+08\n14   0  0.00 2.656e+08\n15   0  0.00 2.009e+08\n16   0  0.00 1.520e+08\n17   0  0.00 1.150e+08\n18   0  0.00 8.697e+07\n19   0  0.00 6.579e+07\n20   0  0.00 4.977e+07\n21   0  0.00 3.765e+07\n22   0  0.00 2.848e+07\n23   0  0.00 2.154e+07\n24   0  0.00 1.630e+07\n25   0  0.00 1.233e+07\n26   0  0.00 9.326e+06\n27   0  0.00 7.055e+06\n28   0  0.00 5.337e+06\n29   0  0.00 4.037e+06\n30   0  0.00 3.054e+06\n31   0  0.00 2.310e+06\n32   0  0.00 1.748e+06\n33   0  0.00 1.322e+06\n34   0  0.00 1.000e+06\n35   0  0.00 7.565e+05\n36   0  0.00 5.722e+05\n37   0  0.00 4.329e+05\n38   0  0.00 3.275e+05\n39   1  4.51 2.477e+05\n40   1 23.72 1.874e+05\n41   1 34.71 1.417e+05\n42   1 41.00 1.072e+05\n43   4 49.05 8.111e+04\n44   7 56.41 6.136e+04\n45  10 62.61 4.642e+04\n46  13 68.29 3.511e+04\n47  16 71.68 2.656e+04\n48  21 74.39 2.009e+04\n49  30 76.82 1.520e+04\n50  41 78.80 1.150e+04\n51  47 80.35 8.697e+03\n52  52 81.38 6.579e+03\n53  58 82.05 4.977e+03\n54  66 82.47 3.765e+03\n55  70 82.74 2.848e+03\n56  76 82.91 2.154e+03\n57  79 83.01 1.630e+03\n58  81 83.07 1.233e+03\n59  83 83.10 9.330e+02\n60  87 83.13 7.060e+02\n61  89 83.15 5.340e+02\n62  88 83.16 4.040e+02\n63  87 83.17 3.050e+02\n64  87 83.17 2.310e+02\n65  87 83.18 1.750e+02\n66  89 83.18 1.320e+02\n67  92 83.18 1.000e+02\n68  93 83.18 7.600e+01\n69  93 83.18 5.700e+01\n70  93 83.19 4.300e+01\n71  92 83.19 3.300e+01\n72  93 83.20 2.500e+01\n73  92 83.20 1.900e+01\n74  93 83.20 1.400e+01\n75  93 83.20 1.100e+01\n76  93 83.20 8.000e+00\n77  93 83.20 6.000e+00\n78  93 83.20 5.000e+00\n79  93 83.20 4.000e+00\n80  93 83.20 3.000e+00\n81  93 83.20 2.000e+00\n82  93 83.20 2.000e+00\n83  93 83.20 1.000e+00\n84  93 83.20 1.000e+00\n85  93 83.20 1.000e+00\n86  93 83.20 0.000e+00\n87  93 83.20 0.000e+00\n88  93 83.20 0.000e+00\n89  94 83.20 0.000e+00\n90  94 83.20 0.000e+00\n91  94 83.20 0.000e+00\n92  94 83.20 0.000e+00\n93  94 83.20 0.000e+00\n94  94 83.20 0.000e+00\n95  94 83.20 0.000e+00\n96  94 83.20 0.000e+00\n97  94 83.20 0.000e+00\n98  94 83.20 0.000e+00\n99  94 83.20 0.000e+00\n100 94 83.20 0.000e+00\n```\n:::\n:::",
    "supporting": [
      "Project_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}